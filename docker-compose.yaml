services:
  backend:
    container_name: aiohttp_server
    build: ./backend
    ports:
      - "8080:8080"
    restart: "on-failure"
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/env/.env
    depends_on:
      - db-postgres
    networks:
      - backend-network
      - rabbitmq-network
      - db-postgres-network

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    networks:
      - rabbitmq-network

  db-postgres:
    container_name: postgres_aio
    image: postgres
    ports:
      - "5434:5432"
    env_file:
      - ./backend/env/.env
    volumes:
      - postgres-aio:/var/lib/postgresql/data
    networks:
      - db-postgres-network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db-postgres
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped
    networks:
      - db-postgres-network

volumes:
  postgres-aio:

networks:
  backend-network:
    driver: bridge
  rabbitmq-network:
    driver: bridge
  db-postgres-network:
    driver: bridge
